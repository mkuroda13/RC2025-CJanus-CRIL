
state 0
	$accept: .prog $end 

	PROCEDURE  shift 3
	.  error

	prog  goto 1
	pmain  goto 2

state 1
	$accept:  prog.$end 

	$end  accept
	.  error


state 2
	prog:  pmain.procs 
	procs: .    (3)

	PROCEDURE  shift 6
	.  reduce 3 (src line 35)

	procs  goto 4
	proc  goto 5

state 3
	pmain:  PROCEDURE.MAIN LPR RPR $$4 mainblock 

	MAIN  shift 7
	.  error


state 4
	prog:  pmain procs.    (1)

	.  reduce 1 (src line 32)


state 5
	procs:  proc.procs 
	procs: .    (3)

	PROCEDURE  shift 6
	.  reduce 3 (src line 35)

	procs  goto 8
	proc  goto 5

state 6
	proc:  PROCEDURE.IDENT $$14 LPR argdecls RPR pblock 

	IDENT  shift 9
	.  error


state 7
	pmain:  PROCEDURE MAIN.LPR RPR $$4 mainblock 

	LPR  shift 10
	.  error


state 8
	procs:  proc procs.    (2)

	.  reduce 2 (src line 34)


state 9
	proc:  PROCEDURE IDENT.$$14 LPR argdecls RPR pblock 
	$$14: .    (14)

	.  reduce 14 (src line 105)

	$$14  goto 11

state 10
	pmain:  PROCEDURE MAIN LPR.RPR $$4 mainblock 

	RPR  shift 12
	.  error


state 11
	proc:  PROCEDURE IDENT $$14.LPR argdecls RPR pblock 

	LPR  shift 13
	.  error


state 12
	pmain:  PROCEDURE MAIN LPR RPR.$$4 mainblock 
	$$4: .    (4)

	.  reduce 4 (src line 37)

	$$4  goto 14

state 13
	proc:  PROCEDURE IDENT $$14 LPR.argdecls RPR pblock 
	argdecls: .    (20)

	INT  shift 17
	SYNC  shift 18
	.  reduce 20 (src line 139)

	argdecls  goto 15
	argdecl  goto 16

state 14
	pmain:  PROCEDURE MAIN LPR RPR $$4.mainblock 

	LCB  shift 20
	.  error

	mainblock  goto 19

state 15
	proc:  PROCEDURE IDENT $$14 LPR argdecls.RPR pblock 

	RPR  shift 21
	.  error


state 16
	argdecls:  argdecl.argdeclmore 
	argdeclmore: .    (22)

	COMMA  shift 23
	.  reduce 22 (src line 143)

	argdeclmore  goto 22

state 17
	argdecl:  INT.IDENT 
	argdecl:  INT.IDENT LSB RSB 

	IDENT  shift 24
	.  error


state 18
	argdecl:  SYNC.IDENT 

	IDENT  shift 25
	.  error


state 19
	pmain:  PROCEDURE MAIN LPR RPR $$4 mainblock.    (5)

	.  reduce 5 (src line 46)


state 20
	mainblock:  LCB.$$6 globvardecls $$7 statements RCB 
	$$6: .    (6)

	.  reduce 6 (src line 54)

	$$6  goto 26

state 21
	proc:  PROCEDURE IDENT $$14 LPR argdecls RPR.pblock 

	LCB  shift 28
	.  error

	pblock  goto 27

state 22
	argdecls:  argdecl argdeclmore.    (19)

	.  reduce 19 (src line 138)


state 23
	argdeclmore:  COMMA.argdecl argdeclmore 

	INT  shift 17
	SYNC  shift 18
	.  error

	argdecl  goto 29

state 24
	argdecl:  INT IDENT.    (23)
	argdecl:  INT IDENT.LSB RSB 

	LSB  shift 30
	.  reduce 23 (src line 145)


state 25
	argdecl:  SYNC IDENT.    (25)

	.  reduce 25 (src line 157)


state 26
	mainblock:  LCB $$6.globvardecls $$7 statements RCB 
	globvardecls: .    (10)

	INT  shift 33
	SYNC  shift 34
	.  reduce 10 (src line 83)

	globvardecls  goto 31
	globvardecl  goto 32

state 27
	proc:  PROCEDURE IDENT $$14 LPR argdecls RPR pblock.    (15)

	.  reduce 15 (src line 114)


state 28
	pblock:  LCB.$$16 statements $$17 RCB 
	$$16: .    (16)

	.  reduce 16 (src line 122)

	$$16  goto 35

state 29
	argdeclmore:  COMMA argdecl.argdeclmore 
	argdeclmore: .    (22)

	COMMA  shift 23
	.  reduce 22 (src line 143)

	argdeclmore  goto 36

state 30
	argdecl:  INT IDENT LSB.RSB 

	RSB  shift 37
	.  error


state 31
	mainblock:  LCB $$6 globvardecls.$$7 statements RCB 
	$$7: .    (7)

	.  reduce 7 (src line 61)

	$$7  goto 38

state 32
	globvardecls:  globvardecl.globvardecls 
	globvardecls: .    (10)

	INT  shift 33
	SYNC  shift 34
	.  reduce 10 (src line 83)

	globvardecls  goto 39
	globvardecl  goto 32

state 33
	globvardecl:  INT.IDENT 
	globvardecl:  INT.IDENT LSB variable RSB 

	IDENT  shift 40
	.  error


state 34
	globvardecl:  SYNC.IDENT 

	IDENT  shift 41
	.  error


state 35
	pblock:  LCB $$16.statements $$17 RCB 
	statements: .    (31)

	IDENT  shift 54
	LCB  shift 60
	IF  shift 56
	FROM  shift 57
	CALL  shift 58
	PAR  shift 59
	SKIP  shift 50
	WAIT  shift 63
	ACQUIRE  shift 62
	.  reduce 31 (src line 182)

	arrentry  goto 55
	statements  goto 42
	block  goto 51
	local_block  goto 61
	statement  goto 43
	assign_statement  goto 44
	arrassign_statement  goto 45
	if_statement  goto 46
	loop_statement  goto 47
	call_statement  goto 48
	par_statement  goto 49
	v_statement  goto 52
	p_statement  goto 53

state 36
	argdeclmore:  COMMA argdecl argdeclmore.    (21)

	.  reduce 21 (src line 142)


state 37
	argdecl:  INT IDENT LSB RSB.    (24)

	.  reduce 24 (src line 151)


state 38
	mainblock:  LCB $$6 globvardecls $$7.statements RCB 
	statements: .    (31)

	IDENT  shift 54
	LCB  shift 60
	IF  shift 56
	FROM  shift 57
	CALL  shift 58
	PAR  shift 59
	SKIP  shift 50
	WAIT  shift 63
	ACQUIRE  shift 62
	.  reduce 31 (src line 182)

	arrentry  goto 55
	statements  goto 64
	block  goto 51
	local_block  goto 61
	statement  goto 43
	assign_statement  goto 44
	arrassign_statement  goto 45
	if_statement  goto 46
	loop_statement  goto 47
	call_statement  goto 48
	par_statement  goto 49
	v_statement  goto 52
	p_statement  goto 53

state 39
	globvardecls:  globvardecl globvardecls.    (9)

	.  reduce 9 (src line 82)


state 40
	globvardecl:  INT IDENT.    (11)
	globvardecl:  INT IDENT.LSB variable RSB 

	LSB  shift 65
	.  reduce 11 (src line 85)


state 41
	globvardecl:  SYNC IDENT.    (12)

	.  reduce 12 (src line 91)


state 42
	pblock:  LCB $$16 statements.$$17 RCB 
	$$17: .    (17)

	.  reduce 17 (src line 129)

	$$17  goto 66

state 43
	statements:  statement.statements 
	statements: .    (31)

	IDENT  shift 54
	LCB  shift 60
	IF  shift 56
	FROM  shift 57
	CALL  shift 58
	PAR  shift 59
	SKIP  shift 50
	WAIT  shift 63
	ACQUIRE  shift 62
	.  reduce 31 (src line 182)

	arrentry  goto 55
	statements  goto 67
	block  goto 51
	local_block  goto 61
	statement  goto 43
	assign_statement  goto 44
	arrassign_statement  goto 45
	if_statement  goto 46
	loop_statement  goto 47
	call_statement  goto 48
	par_statement  goto 49
	v_statement  goto 52
	p_statement  goto 53

state 44
	statement:  assign_statement.    (32)

	.  reduce 32 (src line 184)


state 45
	statement:  arrassign_statement.    (33)

	.  reduce 33 (src line 185)


state 46
	statement:  if_statement.    (34)

	.  reduce 34 (src line 186)


state 47
	statement:  loop_statement.    (35)

	.  reduce 35 (src line 187)


state 48
	statement:  call_statement.    (36)

	.  reduce 36 (src line 188)


state 49
	statement:  par_statement.    (37)

	.  reduce 37 (src line 189)


state 50
	statement:  SKIP.    (38)

	.  reduce 38 (src line 190)


state 51
	statement:  block.    (39)

	.  reduce 39 (src line 191)


state 52
	statement:  v_statement.    (40)

	.  reduce 40 (src line 192)


state 53
	statement:  p_statement.    (41)

	.  reduce 41 (src line 193)


state 54
	assign_statement:  IDENT.PLUS EQ $$42 expr 
	assign_statement:  IDENT.MINUS EQ $$44 expr 
	assign_statement:  IDENT.XOR EQ $$46 expr 
	arrentry:  IDENT.LSB reclab $$48 expr RSB 

	PLUS  shift 68
	MINUS  shift 69
	XOR  shift 70
	LSB  shift 71
	.  error


state 55
	arrassign_statement:  arrentry.PLUS EQ $$50 expr 
	arrassign_statement:  arrentry.MINUS EQ $$52 expr 
	arrassign_statement:  arrentry.XOR EQ $$54 expr 

	PLUS  shift 72
	MINUS  shift 73
	XOR  shift 74
	.  error


state 56
	if_statement:  IF.lab lab lab lab reclab reclab $$56 expr $$57 THEN statements $$58 ELSE statements $$59 FI expr 
	lab: .    (61)

	.  reduce 61 (src line 329)

	lab  goto 75

state 57
	loop_statement:  FROM.lab lab lab lab lab reclab reclab $$62 expr $$63 DO block $$64 LOOP block UNTIL $$65 expr 
	lab: .    (61)

	.  reduce 61 (src line 329)

	lab  goto 76

state 58
	call_statement:  CALL.IDENT reclab $$73 LPR args RPR 

	IDENT  shift 77
	.  error


state 59
	par_statement:  PAR.par_block par_more RAP 
	$$78: .    (78)

	.  reduce 78 (src line 458)

	par_block  goto 78
	$$78  goto 79

state 60
	block:  LCB.$$26 statements $$27 RCB 
	local_block:  LCB.$$67 LOCAL INT IDENT EQ reclab reclab $$68 expr $$69 statements DELOCAL INT IDENT EQ $$70 expr $$71 RCB 
	$$26: .    (26)
	$$67: .    (67)

	LOCAL  reduce 67 (src line 380)
	.  reduce 26 (src line 164)

	$$26  goto 80
	$$67  goto 81

state 61
	block:  local_block.    (29)

	.  reduce 29 (src line 179)


state 62
	v_statement:  ACQUIRE.IDENT 

	IDENT  shift 82
	.  error


state 63
	p_statement:  WAIT.IDENT 

	IDENT  shift 83
	.  error


state 64
	mainblock:  LCB $$6 globvardecls $$7 statements.RCB 

	RCB  shift 84
	.  error


state 65
	globvardecl:  INT IDENT LSB.variable RSB 

	NUM  shift 86
	IDENT  shift 87
	.  error

	variable  goto 85

state 66
	pblock:  LCB $$16 statements $$17.RCB 

	RCB  shift 88
	.  error


state 67
	statements:  statement statements.    (30)

	.  reduce 30 (src line 181)


state 68
	assign_statement:  IDENT PLUS.EQ $$42 expr 

	EQ  shift 89
	.  error


state 69
	assign_statement:  IDENT MINUS.EQ $$44 expr 

	EQ  shift 90
	.  error


state 70
	assign_statement:  IDENT XOR.EQ $$46 expr 

	EQ  shift 91
	.  error


state 71
	arrentry:  IDENT LSB.reclab $$48 expr RSB 
	reclab: .    (87)

	.  reduce 87 (src line 505)

	reclab  goto 92

state 72
	arrassign_statement:  arrentry PLUS.EQ $$50 expr 

	EQ  shift 93
	.  error


state 73
	arrassign_statement:  arrentry MINUS.EQ $$52 expr 

	EQ  shift 94
	.  error


state 74
	arrassign_statement:  arrentry XOR.EQ $$54 expr 

	EQ  shift 95
	.  error


state 75
	if_statement:  IF lab.lab lab lab reclab reclab $$56 expr $$57 THEN statements $$58 ELSE statements $$59 FI expr 
	lab: .    (61)

	.  reduce 61 (src line 329)

	lab  goto 96

state 76
	loop_statement:  FROM lab.lab lab lab lab reclab reclab $$62 expr $$63 DO block $$64 LOOP block UNTIL $$65 expr 
	lab: .    (61)

	.  reduce 61 (src line 329)

	lab  goto 97

state 77
	call_statement:  CALL IDENT.reclab $$73 LPR args RPR 
	reclab: .    (87)

	.  reduce 87 (src line 505)

	reclab  goto 98

state 78
	par_statement:  PAR par_block.par_more RAP 
	par_more: .    (77)

	COMMA  shift 100
	.  reduce 77 (src line 455)

	par_more  goto 99

state 79
	par_block:  $$78.block 

	LCB  shift 60
	.  error

	block  goto 101
	local_block  goto 61

state 80
	block:  LCB $$26.statements $$27 RCB 
	statements: .    (31)

	IDENT  shift 54
	LCB  shift 60
	IF  shift 56
	FROM  shift 57
	CALL  shift 58
	PAR  shift 59
	SKIP  shift 50
	WAIT  shift 63
	ACQUIRE  shift 62
	.  reduce 31 (src line 182)

	arrentry  goto 55
	statements  goto 102
	block  goto 51
	local_block  goto 61
	statement  goto 43
	assign_statement  goto 44
	arrassign_statement  goto 45
	if_statement  goto 46
	loop_statement  goto 47
	call_statement  goto 48
	par_statement  goto 49
	v_statement  goto 52
	p_statement  goto 53

state 81
	local_block:  LCB $$67.LOCAL INT IDENT EQ reclab reclab $$68 expr $$69 statements DELOCAL INT IDENT EQ $$70 expr $$71 RCB 

	LOCAL  shift 103
	.  error


state 82
	v_statement:  ACQUIRE IDENT.    (85)

	.  reduce 85 (src line 492)


state 83
	p_statement:  WAIT IDENT.    (86)

	.  reduce 86 (src line 498)


state 84
	mainblock:  LCB $$6 globvardecls $$7 statements RCB.    (8)

	.  reduce 8 (src line 69)


state 85
	globvardecl:  INT IDENT LSB variable.RSB 

	RSB  shift 104
	.  error


state 86
	variable:  NUM.    (111)

	.  reduce 111 (src line 669)


state 87
	variable:  IDENT.    (112)
	variable:  IDENT.LSB expr RSB 

	LSB  shift 105
	.  reduce 112 (src line 675)


state 88
	pblock:  LCB $$16 statements $$17 RCB.    (18)

	.  reduce 18 (src line 136)


state 89
	assign_statement:  IDENT PLUS EQ.$$42 expr 
	$$42: .    (42)

	.  reduce 42 (src line 195)

	$$42  goto 106

state 90
	assign_statement:  IDENT MINUS EQ.$$44 expr 
	$$44: .    (44)

	.  reduce 44 (src line 208)

	$$44  goto 107

state 91
	assign_statement:  IDENT XOR EQ.$$46 expr 
	$$46: .    (46)

	.  reduce 46 (src line 221)

	$$46  goto 108

state 92
	arrentry:  IDENT LSB reclab.$$48 expr RSB 
	$$48: .    (48)

	.  reduce 48 (src line 234)

	$$48  goto 109

state 93
	arrassign_statement:  arrentry PLUS EQ.$$50 expr 
	$$50: .    (50)

	.  reduce 50 (src line 247)

	$$50  goto 110

state 94
	arrassign_statement:  arrentry MINUS EQ.$$52 expr 
	$$52: .    (52)

	.  reduce 52 (src line 260)

	$$52  goto 111

state 95
	arrassign_statement:  arrentry XOR EQ.$$54 expr 
	$$54: .    (54)

	.  reduce 54 (src line 273)

	$$54  goto 112

state 96
	if_statement:  IF lab lab.lab lab reclab reclab $$56 expr $$57 THEN statements $$58 ELSE statements $$59 FI expr 
	lab: .    (61)

	.  reduce 61 (src line 329)

	lab  goto 113

state 97
	loop_statement:  FROM lab lab.lab lab lab reclab reclab $$62 expr $$63 DO block $$64 LOOP block UNTIL $$65 expr 
	lab: .    (61)

	.  reduce 61 (src line 329)

	lab  goto 114

state 98
	call_statement:  CALL IDENT reclab.$$73 LPR args RPR 
	$$73: .    (73)

	.  reduce 73 (src line 421)

	$$73  goto 115

state 99
	par_statement:  PAR par_block par_more.RAP 

	RAP  shift 116
	.  error


state 100
	par_more:  COMMA.par_block par_more 
	$$78: .    (78)

	.  reduce 78 (src line 458)

	par_block  goto 117
	$$78  goto 79

state 101
	par_block:  $$78 block.    (79)

	.  reduce 79 (src line 468)


state 102
	block:  LCB $$26 statements.$$27 RCB 
	$$27: .    (27)

	.  reduce 27 (src line 171)

	$$27  goto 118

state 103
	local_block:  LCB $$67 LOCAL.INT IDENT EQ reclab reclab $$68 expr $$69 statements DELOCAL INT IDENT EQ $$70 expr $$71 RCB 

	INT  shift 119
	.  error


state 104
	globvardecl:  INT IDENT LSB variable RSB.    (13)

	.  reduce 13 (src line 97)


state 105
	variable:  IDENT LSB.expr RSB 

	NUM  shift 86
	IDENT  shift 87
	LPR  shift 127
	.  error

	variable  goto 126
	expr  goto 120
	expr2  goto 121
	expr3  goto 122
	expr4  goto 123
	expr5  goto 124
	expr6  goto 125

state 106
	assign_statement:  IDENT PLUS EQ $$42.expr 

	NUM  shift 86
	IDENT  shift 87
	LPR  shift 127
	.  error

	variable  goto 126
	expr  goto 128
	expr2  goto 121
	expr3  goto 122
	expr4  goto 123
	expr5  goto 124
	expr6  goto 125

state 107
	assign_statement:  IDENT MINUS EQ $$44.expr 

	NUM  shift 86
	IDENT  shift 87
	LPR  shift 127
	.  error

	variable  goto 126
	expr  goto 129
	expr2  goto 121
	expr3  goto 122
	expr4  goto 123
	expr5  goto 124
	expr6  goto 125

state 108
	assign_statement:  IDENT XOR EQ $$46.expr 

	NUM  shift 86
	IDENT  shift 87
	LPR  shift 127
	.  error

	variable  goto 126
	expr  goto 130
	expr2  goto 121
	expr3  goto 122
	expr4  goto 123
	expr5  goto 124
	expr6  goto 125

state 109
	arrentry:  IDENT LSB reclab $$48.expr RSB 

	NUM  shift 86
	IDENT  shift 87
	LPR  shift 127
	.  error

	variable  goto 126
	expr  goto 131
	expr2  goto 121
	expr3  goto 122
	expr4  goto 123
	expr5  goto 124
	expr6  goto 125

state 110
	arrassign_statement:  arrentry PLUS EQ $$50.expr 

	NUM  shift 86
	IDENT  shift 87
	LPR  shift 127
	.  error

	variable  goto 126
	expr  goto 132
	expr2  goto 121
	expr3  goto 122
	expr4  goto 123
	expr5  goto 124
	expr6  goto 125

state 111
	arrassign_statement:  arrentry MINUS EQ $$52.expr 

	NUM  shift 86
	IDENT  shift 87
	LPR  shift 127
	.  error

	variable  goto 126
	expr  goto 133
	expr2  goto 121
	expr3  goto 122
	expr4  goto 123
	expr5  goto 124
	expr6  goto 125

state 112
	arrassign_statement:  arrentry XOR EQ $$54.expr 

	NUM  shift 86
	IDENT  shift 87
	LPR  shift 127
	.  error

	variable  goto 126
	expr  goto 134
	expr2  goto 121
	expr3  goto 122
	expr4  goto 123
	expr5  goto 124
	expr6  goto 125

state 113
	if_statement:  IF lab lab lab.lab reclab reclab $$56 expr $$57 THEN statements $$58 ELSE statements $$59 FI expr 
	lab: .    (61)

	.  reduce 61 (src line 329)

	lab  goto 135

state 114
	loop_statement:  FROM lab lab lab.lab lab reclab reclab $$62 expr $$63 DO block $$64 LOOP block UNTIL $$65 expr 
	lab: .    (61)

	.  reduce 61 (src line 329)

	lab  goto 136

state 115
	call_statement:  CALL IDENT reclab $$73.LPR args RPR 

	LPR  shift 137
	.  error


state 116
	par_statement:  PAR par_block par_more RAP.    (75)

	.  reduce 75 (src line 440)


state 117
	par_more:  COMMA par_block.par_more 
	par_more: .    (77)

	COMMA  shift 100
	.  reduce 77 (src line 455)

	par_more  goto 138

state 118
	block:  LCB $$26 statements $$27.RCB 

	RCB  shift 139
	.  error


state 119
	local_block:  LCB $$67 LOCAL INT.IDENT EQ reclab reclab $$68 expr $$69 statements DELOCAL INT IDENT EQ $$70 expr $$71 RCB 

	IDENT  shift 140
	.  error


state 120
	expr:  expr.OR expr2 
	variable:  IDENT LSB expr.RSB 

	OR  shift 141
	RSB  shift 142
	.  error


state 121
	expr:  expr2.    (88)
	expr2:  expr2.AND expr3 

	AND  shift 143
	.  reduce 88 (src line 510)


state 122
	expr2:  expr3.    (90)
	expr3:  expr3.LEQ expr4 
	expr3:  expr3.GEQ expr4 
	expr3:  expr3.EQ expr4 
	expr3:  expr3.NEQ expr4 
	expr3:  expr3.LES expr4 
	expr3:  expr3.GRT expr4 

	LEQ  shift 144
	GEQ  shift 145
	NEQ  shift 147
	EQ  shift 146
	LES  shift 148
	GRT  shift 149
	.  reduce 90 (src line 523)


state 123
	expr3:  expr4.    (92)
	expr4:  expr4.PLUS expr5 
	expr4:  expr4.MINUS expr5 
	expr4:  expr4.BITOR expr5 
	expr4:  expr4.XOR expr5 

	PLUS  shift 150
	MINUS  shift 151
	XOR  shift 153
	BITOR  shift 152
	.  reduce 92 (src line 537)


state 124
	expr4:  expr5.    (99)
	expr5:  expr5.MULT expr6 
	expr5:  expr5.DIV expr6 
	expr5:  expr5.MOD expr6 
	expr5:  expr5.BITAND expr6 

	MULT  shift 154
	DIV  shift 155
	MOD  shift 156
	BITAND  shift 157
	.  reduce 99 (src line 595)


state 125
	expr5:  expr6.    (104)

	.  reduce 104 (src line 627)


state 126
	expr6:  variable.    (109)

	.  reduce 109 (src line 660)


state 127
	expr6:  LPR.expr RPR 

	NUM  shift 86
	IDENT  shift 87
	LPR  shift 127
	.  error

	variable  goto 126
	expr  goto 158
	expr2  goto 121
	expr3  goto 122
	expr4  goto 123
	expr5  goto 124
	expr6  goto 125

state 128
	assign_statement:  IDENT PLUS EQ $$42 expr.    (43)
	expr:  expr.OR expr2 

	OR  shift 141
	.  reduce 43 (src line 201)


state 129
	assign_statement:  IDENT MINUS EQ $$44 expr.    (45)
	expr:  expr.OR expr2 

	OR  shift 141
	.  reduce 45 (src line 214)


state 130
	assign_statement:  IDENT XOR EQ $$46 expr.    (47)
	expr:  expr.OR expr2 

	OR  shift 141
	.  reduce 47 (src line 227)


state 131
	arrentry:  IDENT LSB reclab $$48 expr.RSB 
	expr:  expr.OR expr2 

	OR  shift 141
	RSB  shift 159
	.  error


state 132
	arrassign_statement:  arrentry PLUS EQ $$50 expr.    (51)
	expr:  expr.OR expr2 

	OR  shift 141
	.  reduce 51 (src line 253)


state 133
	arrassign_statement:  arrentry MINUS EQ $$52 expr.    (53)
	expr:  expr.OR expr2 

	OR  shift 141
	.  reduce 53 (src line 266)


state 134
	arrassign_statement:  arrentry XOR EQ $$54 expr.    (55)
	expr:  expr.OR expr2 

	OR  shift 141
	.  reduce 55 (src line 279)


state 135
	if_statement:  IF lab lab lab lab.reclab reclab $$56 expr $$57 THEN statements $$58 ELSE statements $$59 FI expr 
	reclab: .    (87)

	.  reduce 87 (src line 505)

	reclab  goto 160

state 136
	loop_statement:  FROM lab lab lab lab.lab reclab reclab $$62 expr $$63 DO block $$64 LOOP block UNTIL $$65 expr 
	lab: .    (61)

	.  reduce 61 (src line 329)

	lab  goto 161

state 137
	call_statement:  CALL IDENT reclab $$73 LPR.args RPR 
	args: .    (81)

	IDENT  shift 164
	.  reduce 81 (src line 477)

	args  goto 162
	arg  goto 163

state 138
	par_more:  COMMA par_block par_more.    (76)

	.  reduce 76 (src line 454)


state 139
	block:  LCB $$26 statements $$27 RCB.    (28)

	.  reduce 28 (src line 178)


state 140
	local_block:  LCB $$67 LOCAL INT IDENT.EQ reclab reclab $$68 expr $$69 statements DELOCAL INT IDENT EQ $$70 expr $$71 RCB 

	EQ  shift 165
	.  error


state 141
	expr:  expr OR.expr2 

	NUM  shift 86
	IDENT  shift 87
	LPR  shift 127
	.  error

	variable  goto 126
	expr2  goto 166
	expr3  goto 122
	expr4  goto 123
	expr5  goto 124
	expr6  goto 125

state 142
	variable:  IDENT LSB expr RSB.    (113)

	.  reduce 113 (src line 681)


state 143
	expr2:  expr2 AND.expr3 

	NUM  shift 86
	IDENT  shift 87
	LPR  shift 127
	.  error

	variable  goto 126
	expr3  goto 167
	expr4  goto 123
	expr5  goto 124
	expr6  goto 125

state 144
	expr3:  expr3 LEQ.expr4 

	NUM  shift 86
	IDENT  shift 87
	LPR  shift 127
	.  error

	variable  goto 126
	expr4  goto 168
	expr5  goto 124
	expr6  goto 125

state 145
	expr3:  expr3 GEQ.expr4 

	NUM  shift 86
	IDENT  shift 87
	LPR  shift 127
	.  error

	variable  goto 126
	expr4  goto 169
	expr5  goto 124
	expr6  goto 125

state 146
	expr3:  expr3 EQ.expr4 

	NUM  shift 86
	IDENT  shift 87
	LPR  shift 127
	.  error

	variable  goto 126
	expr4  goto 170
	expr5  goto 124
	expr6  goto 125

state 147
	expr3:  expr3 NEQ.expr4 

	NUM  shift 86
	IDENT  shift 87
	LPR  shift 127
	.  error

	variable  goto 126
	expr4  goto 171
	expr5  goto 124
	expr6  goto 125

state 148
	expr3:  expr3 LES.expr4 

	NUM  shift 86
	IDENT  shift 87
	LPR  shift 127
	.  error

	variable  goto 126
	expr4  goto 172
	expr5  goto 124
	expr6  goto 125

state 149
	expr3:  expr3 GRT.expr4 

	NUM  shift 86
	IDENT  shift 87
	LPR  shift 127
	.  error

	variable  goto 126
	expr4  goto 173
	expr5  goto 124
	expr6  goto 125

state 150
	expr4:  expr4 PLUS.expr5 

	NUM  shift 86
	IDENT  shift 87
	LPR  shift 127
	.  error

	variable  goto 126
	expr5  goto 174
	expr6  goto 125

state 151
	expr4:  expr4 MINUS.expr5 

	NUM  shift 86
	IDENT  shift 87
	LPR  shift 127
	.  error

	variable  goto 126
	expr5  goto 175
	expr6  goto 125

state 152
	expr4:  expr4 BITOR.expr5 

	NUM  shift 86
	IDENT  shift 87
	LPR  shift 127
	.  error

	variable  goto 126
	expr5  goto 176
	expr6  goto 125

state 153
	expr4:  expr4 XOR.expr5 

	NUM  shift 86
	IDENT  shift 87
	LPR  shift 127
	.  error

	variable  goto 126
	expr5  goto 177
	expr6  goto 125

state 154
	expr5:  expr5 MULT.expr6 

	NUM  shift 86
	IDENT  shift 87
	LPR  shift 127
	.  error

	variable  goto 126
	expr6  goto 178

state 155
	expr5:  expr5 DIV.expr6 

	NUM  shift 86
	IDENT  shift 87
	LPR  shift 127
	.  error

	variable  goto 126
	expr6  goto 179

state 156
	expr5:  expr5 MOD.expr6 

	NUM  shift 86
	IDENT  shift 87
	LPR  shift 127
	.  error

	variable  goto 126
	expr6  goto 180

state 157
	expr5:  expr5 BITAND.expr6 

	NUM  shift 86
	IDENT  shift 87
	LPR  shift 127
	.  error

	variable  goto 126
	expr6  goto 181

state 158
	expr:  expr.OR expr2 
	expr6:  LPR expr.RPR 

	OR  shift 141
	RPR  shift 182
	.  error


state 159
	arrentry:  IDENT LSB reclab $$48 expr RSB.    (49)

	.  reduce 49 (src line 240)


state 160
	if_statement:  IF lab lab lab lab reclab.reclab $$56 expr $$57 THEN statements $$58 ELSE statements $$59 FI expr 
	reclab: .    (87)

	.  reduce 87 (src line 505)

	reclab  goto 183

state 161
	loop_statement:  FROM lab lab lab lab lab.reclab reclab $$62 expr $$63 DO block $$64 LOOP block UNTIL $$65 expr 
	reclab: .    (87)

	.  reduce 87 (src line 505)

	reclab  goto 184

state 162
	call_statement:  CALL IDENT reclab $$73 LPR args.RPR 

	RPR  shift 185
	.  error


state 163
	args:  arg.argmore 
	argmore: .    (83)

	COMMA  shift 187
	.  reduce 83 (src line 481)

	argmore  goto 186

state 164
	arg:  IDENT.    (84)

	.  reduce 84 (src line 483)


state 165
	local_block:  LCB $$67 LOCAL INT IDENT EQ.reclab reclab $$68 expr $$69 statements DELOCAL INT IDENT EQ $$70 expr $$71 RCB 
	reclab: .    (87)

	.  reduce 87 (src line 505)

	reclab  goto 188

state 166
	expr:  expr OR expr2.    (89)
	expr2:  expr2.AND expr3 

	AND  shift 143
	.  reduce 89 (src line 514)


state 167
	expr2:  expr2 AND expr3.    (91)
	expr3:  expr3.LEQ expr4 
	expr3:  expr3.GEQ expr4 
	expr3:  expr3.EQ expr4 
	expr3:  expr3.NEQ expr4 
	expr3:  expr3.LES expr4 
	expr3:  expr3.GRT expr4 

	LEQ  shift 144
	GEQ  shift 145
	NEQ  shift 147
	EQ  shift 146
	LES  shift 148
	GRT  shift 149
	.  reduce 91 (src line 527)


state 168
	expr3:  expr3 LEQ expr4.    (93)
	expr4:  expr4.PLUS expr5 
	expr4:  expr4.MINUS expr5 
	expr4:  expr4.BITOR expr5 
	expr4:  expr4.XOR expr5 

	PLUS  shift 150
	MINUS  shift 151
	XOR  shift 153
	BITOR  shift 152
	.  reduce 93 (src line 541)


state 169
	expr3:  expr3 GEQ expr4.    (94)
	expr4:  expr4.PLUS expr5 
	expr4:  expr4.MINUS expr5 
	expr4:  expr4.BITOR expr5 
	expr4:  expr4.XOR expr5 

	PLUS  shift 150
	MINUS  shift 151
	XOR  shift 153
	BITOR  shift 152
	.  reduce 94 (src line 550)


state 170
	expr3:  expr3 EQ expr4.    (95)
	expr4:  expr4.PLUS expr5 
	expr4:  expr4.MINUS expr5 
	expr4:  expr4.BITOR expr5 
	expr4:  expr4.XOR expr5 

	PLUS  shift 150
	MINUS  shift 151
	XOR  shift 153
	BITOR  shift 152
	.  reduce 95 (src line 559)


state 171
	expr3:  expr3 NEQ expr4.    (96)
	expr4:  expr4.PLUS expr5 
	expr4:  expr4.MINUS expr5 
	expr4:  expr4.BITOR expr5 
	expr4:  expr4.XOR expr5 

	PLUS  shift 150
	MINUS  shift 151
	XOR  shift 153
	BITOR  shift 152
	.  reduce 96 (src line 568)


state 172
	expr3:  expr3 LES expr4.    (97)
	expr4:  expr4.PLUS expr5 
	expr4:  expr4.MINUS expr5 
	expr4:  expr4.BITOR expr5 
	expr4:  expr4.XOR expr5 

	PLUS  shift 150
	MINUS  shift 151
	XOR  shift 153
	BITOR  shift 152
	.  reduce 97 (src line 577)


state 173
	expr3:  expr3 GRT expr4.    (98)
	expr4:  expr4.PLUS expr5 
	expr4:  expr4.MINUS expr5 
	expr4:  expr4.BITOR expr5 
	expr4:  expr4.XOR expr5 

	PLUS  shift 150
	MINUS  shift 151
	XOR  shift 153
	BITOR  shift 152
	.  reduce 98 (src line 586)


state 174
	expr4:  expr4 PLUS expr5.    (100)
	expr5:  expr5.MULT expr6 
	expr5:  expr5.DIV expr6 
	expr5:  expr5.MOD expr6 
	expr5:  expr5.BITAND expr6 

	MULT  shift 154
	DIV  shift 155
	MOD  shift 156
	BITAND  shift 157
	.  reduce 100 (src line 599)


state 175
	expr4:  expr4 MINUS expr5.    (101)
	expr5:  expr5.MULT expr6 
	expr5:  expr5.DIV expr6 
	expr5:  expr5.MOD expr6 
	expr5:  expr5.BITAND expr6 

	MULT  shift 154
	DIV  shift 155
	MOD  shift 156
	BITAND  shift 157
	.  reduce 101 (src line 608)


state 176
	expr4:  expr4 BITOR expr5.    (102)
	expr5:  expr5.MULT expr6 
	expr5:  expr5.DIV expr6 
	expr5:  expr5.MOD expr6 
	expr5:  expr5.BITAND expr6 

	MULT  shift 154
	DIV  shift 155
	MOD  shift 156
	BITAND  shift 157
	.  reduce 102 (src line 617)


state 177
	expr4:  expr4 XOR expr5.    (103)
	expr5:  expr5.MULT expr6 
	expr5:  expr5.DIV expr6 
	expr5:  expr5.MOD expr6 
	expr5:  expr5.BITAND expr6 

	MULT  shift 154
	DIV  shift 155
	MOD  shift 156
	BITAND  shift 157
	.  reduce 103 (src line 618)


state 178
	expr5:  expr5 MULT expr6.    (105)

	.  reduce 105 (src line 631)


state 179
	expr5:  expr5 DIV expr6.    (106)

	.  reduce 106 (src line 640)


state 180
	expr5:  expr5 MOD expr6.    (107)

	.  reduce 107 (src line 649)


state 181
	expr5:  expr5 BITAND expr6.    (108)

	.  reduce 108 (src line 658)


state 182
	expr6:  LPR expr RPR.    (110)

	.  reduce 110 (src line 664)


state 183
	if_statement:  IF lab lab lab lab reclab reclab.$$56 expr $$57 THEN statements $$58 ELSE statements $$59 FI expr 
	$$56: .    (56)

	.  reduce 56 (src line 287)

	$$56  goto 189

state 184
	loop_statement:  FROM lab lab lab lab lab reclab.reclab $$62 expr $$63 DO block $$64 LOOP block UNTIL $$65 expr 
	reclab: .    (87)

	.  reduce 87 (src line 505)

	reclab  goto 190

state 185
	call_statement:  CALL IDENT reclab $$73 LPR args RPR.    (74)

	.  reduce 74 (src line 429)


state 186
	args:  arg argmore.    (80)

	.  reduce 80 (src line 476)


state 187
	argmore:  COMMA.arg argmore 

	IDENT  shift 164
	.  error

	arg  goto 191

state 188
	local_block:  LCB $$67 LOCAL INT IDENT EQ reclab.reclab $$68 expr $$69 statements DELOCAL INT IDENT EQ $$70 expr $$71 RCB 
	reclab: .    (87)

	.  reduce 87 (src line 505)

	reclab  goto 192

state 189
	if_statement:  IF lab lab lab lab reclab reclab $$56.expr $$57 THEN statements $$58 ELSE statements $$59 FI expr 

	NUM  shift 86
	IDENT  shift 87
	LPR  shift 127
	.  error

	variable  goto 126
	expr  goto 193
	expr2  goto 121
	expr3  goto 122
	expr4  goto 123
	expr5  goto 124
	expr6  goto 125

state 190
	loop_statement:  FROM lab lab lab lab lab reclab reclab.$$62 expr $$63 DO block $$64 LOOP block UNTIL $$65 expr 
	$$62: .    (62)

	.  reduce 62 (src line 336)

	$$62  goto 194

state 191
	argmore:  COMMA arg.argmore 
	argmore: .    (83)

	COMMA  shift 187
	.  reduce 83 (src line 481)

	argmore  goto 195

state 192
	local_block:  LCB $$67 LOCAL INT IDENT EQ reclab reclab.$$68 expr $$69 statements DELOCAL INT IDENT EQ $$70 expr $$71 RCB 
	$$68: .    (68)

	.  reduce 68 (src line 387)

	$$68  goto 196

state 193
	if_statement:  IF lab lab lab lab reclab reclab $$56 expr.$$57 THEN statements $$58 ELSE statements $$59 FI expr 
	expr:  expr.OR expr2 
	$$57: .    (57)

	OR  shift 141
	.  reduce 57 (src line 293)

	$$57  goto 197

state 194
	loop_statement:  FROM lab lab lab lab lab reclab reclab $$62.expr $$63 DO block $$64 LOOP block UNTIL $$65 expr 

	NUM  shift 86
	IDENT  shift 87
	LPR  shift 127
	.  error

	variable  goto 126
	expr  goto 198
	expr2  goto 121
	expr3  goto 122
	expr4  goto 123
	expr5  goto 124
	expr6  goto 125

state 195
	argmore:  COMMA arg argmore.    (82)

	.  reduce 82 (src line 480)


state 196
	local_block:  LCB $$67 LOCAL INT IDENT EQ reclab reclab $$68.expr $$69 statements DELOCAL INT IDENT EQ $$70 expr $$71 RCB 

	NUM  shift 86
	IDENT  shift 87
	LPR  shift 127
	.  error

	variable  goto 126
	expr  goto 199
	expr2  goto 121
	expr3  goto 122
	expr4  goto 123
	expr5  goto 124
	expr6  goto 125

state 197
	if_statement:  IF lab lab lab lab reclab reclab $$56 expr $$57.THEN statements $$58 ELSE statements $$59 FI expr 

	THEN  shift 200
	.  error


state 198
	loop_statement:  FROM lab lab lab lab lab reclab reclab $$62 expr.$$63 DO block $$64 LOOP block UNTIL $$65 expr 
	expr:  expr.OR expr2 
	$$63: .    (63)

	OR  shift 141
	.  reduce 63 (src line 342)

	$$63  goto 201

state 199
	local_block:  LCB $$67 LOCAL INT IDENT EQ reclab reclab $$68 expr.$$69 statements DELOCAL INT IDENT EQ $$70 expr $$71 RCB 
	expr:  expr.OR expr2 
	$$69: .    (69)

	OR  shift 141
	.  reduce 69 (src line 393)

	$$69  goto 202

state 200
	if_statement:  IF lab lab lab lab reclab reclab $$56 expr $$57 THEN.statements $$58 ELSE statements $$59 FI expr 
	statements: .    (31)

	IDENT  shift 54
	LCB  shift 60
	IF  shift 56
	FROM  shift 57
	CALL  shift 58
	PAR  shift 59
	SKIP  shift 50
	WAIT  shift 63
	ACQUIRE  shift 62
	.  reduce 31 (src line 182)

	arrentry  goto 55
	statements  goto 203
	block  goto 51
	local_block  goto 61
	statement  goto 43
	assign_statement  goto 44
	arrassign_statement  goto 45
	if_statement  goto 46
	loop_statement  goto 47
	call_statement  goto 48
	par_statement  goto 49
	v_statement  goto 52
	p_statement  goto 53

state 201
	loop_statement:  FROM lab lab lab lab lab reclab reclab $$62 expr $$63.DO block $$64 LOOP block UNTIL $$65 expr 

	DO  shift 204
	.  error


state 202
	local_block:  LCB $$67 LOCAL INT IDENT EQ reclab reclab $$68 expr $$69.statements DELOCAL INT IDENT EQ $$70 expr $$71 RCB 
	statements: .    (31)

	IDENT  shift 54
	LCB  shift 60
	IF  shift 56
	FROM  shift 57
	CALL  shift 58
	PAR  shift 59
	SKIP  shift 50
	WAIT  shift 63
	ACQUIRE  shift 62
	.  reduce 31 (src line 182)

	arrentry  goto 55
	statements  goto 205
	block  goto 51
	local_block  goto 61
	statement  goto 43
	assign_statement  goto 44
	arrassign_statement  goto 45
	if_statement  goto 46
	loop_statement  goto 47
	call_statement  goto 48
	par_statement  goto 49
	v_statement  goto 52
	p_statement  goto 53

state 203
	if_statement:  IF lab lab lab lab reclab reclab $$56 expr $$57 THEN statements.$$58 ELSE statements $$59 FI expr 
	$$58: .    (58)

	.  reduce 58 (src line 303)

	$$58  goto 206

state 204
	loop_statement:  FROM lab lab lab lab lab reclab reclab $$62 expr $$63 DO.block $$64 LOOP block UNTIL $$65 expr 

	LCB  shift 60
	.  error

	block  goto 207
	local_block  goto 61

state 205
	local_block:  LCB $$67 LOCAL INT IDENT EQ reclab reclab $$68 expr $$69 statements.DELOCAL INT IDENT EQ $$70 expr $$71 RCB 

	DELOCAL  shift 208
	.  error


state 206
	if_statement:  IF lab lab lab lab reclab reclab $$56 expr $$57 THEN statements $$58.ELSE statements $$59 FI expr 

	ELSE  shift 209
	.  error


state 207
	loop_statement:  FROM lab lab lab lab lab reclab reclab $$62 expr $$63 DO block.$$64 LOOP block UNTIL $$65 expr 
	$$64: .    (64)

	.  reduce 64 (src line 352)

	$$64  goto 210

state 208
	local_block:  LCB $$67 LOCAL INT IDENT EQ reclab reclab $$68 expr $$69 statements DELOCAL.INT IDENT EQ $$70 expr $$71 RCB 

	INT  shift 211
	.  error


state 209
	if_statement:  IF lab lab lab lab reclab reclab $$56 expr $$57 THEN statements $$58 ELSE.statements $$59 FI expr 
	statements: .    (31)

	IDENT  shift 54
	LCB  shift 60
	IF  shift 56
	FROM  shift 57
	CALL  shift 58
	PAR  shift 59
	SKIP  shift 50
	WAIT  shift 63
	ACQUIRE  shift 62
	.  reduce 31 (src line 182)

	arrentry  goto 55
	statements  goto 212
	block  goto 51
	local_block  goto 61
	statement  goto 43
	assign_statement  goto 44
	arrassign_statement  goto 45
	if_statement  goto 46
	loop_statement  goto 47
	call_statement  goto 48
	par_statement  goto 49
	v_statement  goto 52
	p_statement  goto 53

state 210
	loop_statement:  FROM lab lab lab lab lab reclab reclab $$62 expr $$63 DO block $$64.LOOP block UNTIL $$65 expr 

	LOOP  shift 213
	.  error


state 211
	local_block:  LCB $$67 LOCAL INT IDENT EQ reclab reclab $$68 expr $$69 statements DELOCAL INT.IDENT EQ $$70 expr $$71 RCB 

	IDENT  shift 214
	.  error


state 212
	if_statement:  IF lab lab lab lab reclab reclab $$56 expr $$57 THEN statements $$58 ELSE statements.$$59 FI expr 
	$$59: .    (59)

	.  reduce 59 (src line 312)

	$$59  goto 215

state 213
	loop_statement:  FROM lab lab lab lab lab reclab reclab $$62 expr $$63 DO block $$64 LOOP.block UNTIL $$65 expr 

	LCB  shift 60
	.  error

	block  goto 216
	local_block  goto 61

state 214
	local_block:  LCB $$67 LOCAL INT IDENT EQ reclab reclab $$68 expr $$69 statements DELOCAL INT IDENT.EQ $$70 expr $$71 RCB 

	EQ  shift 217
	.  error


state 215
	if_statement:  IF lab lab lab lab reclab reclab $$56 expr $$57 THEN statements $$58 ELSE statements $$59.FI expr 

	FI  shift 218
	.  error


state 216
	loop_statement:  FROM lab lab lab lab lab reclab reclab $$62 expr $$63 DO block $$64 LOOP block.UNTIL $$65 expr 

	UNTIL  shift 219
	.  error


state 217
	local_block:  LCB $$67 LOCAL INT IDENT EQ reclab reclab $$68 expr $$69 statements DELOCAL INT IDENT EQ.$$70 expr $$71 RCB 
	$$70: .    (70)

	.  reduce 70 (src line 402)

	$$70  goto 220

state 218
	if_statement:  IF lab lab lab lab reclab reclab $$56 expr $$57 THEN statements $$58 ELSE statements $$59 FI.expr 

	NUM  shift 86
	IDENT  shift 87
	LPR  shift 127
	.  error

	variable  goto 126
	expr  goto 221
	expr2  goto 121
	expr3  goto 122
	expr4  goto 123
	expr5  goto 124
	expr6  goto 125

state 219
	loop_statement:  FROM lab lab lab lab lab reclab reclab $$62 expr $$63 DO block $$64 LOOP block UNTIL.$$65 expr 
	$$65: .    (65)

	.  reduce 65 (src line 360)

	$$65  goto 222

state 220
	local_block:  LCB $$67 LOCAL INT IDENT EQ reclab reclab $$68 expr $$69 statements DELOCAL INT IDENT EQ $$70.expr $$71 RCB 

	NUM  shift 86
	IDENT  shift 87
	LPR  shift 127
	.  error

	variable  goto 126
	expr  goto 223
	expr2  goto 121
	expr3  goto 122
	expr4  goto 123
	expr5  goto 124
	expr6  goto 125

state 221
	if_statement:  IF lab lab lab lab reclab reclab $$56 expr $$57 THEN statements $$58 ELSE statements $$59 FI expr.    (60)
	expr:  expr.OR expr2 

	OR  shift 141
	.  reduce 60 (src line 320)


state 222
	loop_statement:  FROM lab lab lab lab lab reclab reclab $$62 expr $$63 DO block $$64 LOOP block UNTIL $$65.expr 

	NUM  shift 86
	IDENT  shift 87
	LPR  shift 127
	.  error

	variable  goto 126
	expr  goto 224
	expr2  goto 121
	expr3  goto 122
	expr4  goto 123
	expr5  goto 124
	expr6  goto 125

state 223
	local_block:  LCB $$67 LOCAL INT IDENT EQ reclab reclab $$68 expr $$69 statements DELOCAL INT IDENT EQ $$70 expr.$$71 RCB 
	expr:  expr.OR expr2 
	$$71: .    (71)

	OR  shift 141
	.  reduce 71 (src line 408)

	$$71  goto 225

state 224
	loop_statement:  FROM lab lab lab lab lab reclab reclab $$62 expr $$63 DO block $$64 LOOP block UNTIL $$65 expr.    (66)
	expr:  expr.OR expr2 

	OR  shift 141
	.  reduce 66 (src line 369)


state 225
	local_block:  LCB $$67 LOCAL INT IDENT EQ reclab reclab $$68 expr $$69 statements DELOCAL INT IDENT EQ $$70 expr $$71.RCB 

	RCB  shift 226
	.  error


state 226
	local_block:  LCB $$67 LOCAL INT IDENT EQ reclab reclab $$68 expr $$69 statements DELOCAL INT IDENT EQ $$70 expr $$71 RCB.    (72)

	.  reduce 72 (src line 419)


53 terminals, 69 nonterminals
114 grammar rules, 227/16000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
118 working sets used
memory: parser 361/240000
166 extra closures
314 shift entries, 2 exceptions
131 goto entries
201 entries saved by goto default
Optimizer space used: output 232/240000
232 table entries, 0 zero
maximum spread: 53, maximum offset: 222
